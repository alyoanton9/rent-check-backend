version: '3.8'
services:
  db:
    image: postgres:15.2-alpine
    container_name: 'rent-checklist-postgres'
    hostname: db
    ports:
      - '4444:5432' # to host from container
    networks:
      - backend
    env_file:
      - .env
    volumes:
      - rent-checklist-volume:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", $POSTGRES_DB ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  api:
    # image: "cr.yandex/${REGISTRY_ID}/rent-checklist-backend"
    container_name: 'rent-checklist-api'
    hostname: api
    ports:
      - '${HTTP_PORT}:80'
      - '${HTTPS_PORT}:443'
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
    build: .
    env_file:
      - .env
    volumes:
      - cert-cache:/var/www/.cache
    restart: always

networks:
  backend:
    driver: bridge

volumes:
  rent-checklist-volume:
  cert-cache:
